incmeans
incomes[state=="nsw"]
incomes[state=="nt"]
?tapply
stdError <- function(x) sqrt(var(x)/length(x))
incster <- tapply(incomes, statef, stdError)
incster
qt(incomes)
quantile(incomes)
quantile(incomes,.95)
qt <- function(x) quantile(x,.95)
incqt <- tapply(incomes, statef, qt)
incqt
incmeans
quantile(income,.95)
quantile(income,.95)
quantile(income)
quantile(incomes,.95)
quantile(incomes["nsw"],.95)
quantile(incomes["nsw"],.95)
quantile(incomes["nsw"],.95, na.rm=TRUE)
quantile(incomes["nsw"],.95, na.rm=FALSE)
quantile(incomes["nsw"],.95, na.rm=TRUE)
quantile(incomes[factor("nsw)],.95, na.rm=TRUE)
quantile(incomes[factor("nsw")],.95, na.rm=TRUE)
incmeans
incqt
quantile(c(1,2,3,4,5),.95)
quantile(c(1,2,3,4,5),.95)
quantile(c(1,2,3,4,5),.95)
quantile(incomes,.95)
(incomes,.95)
incmeans <- tapply(incomes, statef, mean)
incqt <- tapply(incomes, statef, qt)
incmeans
incqt
statef2 = ordered(state)
statef2
statef2[1]
levels(statef2)
ordering(statefe2)
ordering(statef2)
order(statef2)
?order
statef2[order(statef2)]
matrix(1:9,3,3)
matrix(1:9,3,3,TRUE)
matrix(1:9,3,3,FALSE)
dim(a) <- (3,3,3)
dim(a) <- (3,3,3)
a <- 1:27
dim(a) <- (3,3,3)
dim(a) <- c(3,3,3)
a
dim(b) <- c(3,3,3)
b<-0
dim(b) <- c(3,3,3)
a
matrix(1:27,3,3,3)
matrix(1:27,3,3,3)
matrix(1:27,3,3,3)
x <- c(1,3,2,5)
x
y = c(1,4,3)
y
y
x
x
y = c(1,4,3)
# funcname(input1, input2) to use functions
# c() to concatenate
x <- c(1,2,5)
x
y = c(1,4,3)
y
length(x)
x+y
ls()
fwrq()
getwd()
setwd("/Users/peterjmyers/Documents/Personal/Data Science/Machine Learning/ISL/R Labs")
getwd()
x+y
ls()
rm(x,y)
x
ls()
rm(ls())
rm(list=ls())
ls
ls()
x <- c(1,2,5)
x
y = c(1,4,3)
x+y
rm(x,y)
x+y
?matrix # see help page
x=matrix(data=c(1,2,3,4), nrow=2, ncol=2)
x
sqrt(x)
x^2
x=rnorm(50)
y=x+rnorm(50,mean=50,sd=.1)
cor(x,y)
x
y
cor(x,y)
z=rnorm(50,mean=50,sd=.1)
cor(x,z)
cor(x,z,y)
cor(x,z)
cor(x,y)
cor(y,x)
set.seed()
set.seed(1303)
rnorm(50,mean=50,sd=.1)
rnorm(50,mean=50,sd=.1)
set.seed(1303)
rnorm(50,mean=50,sd=.1)
set.seed(3)
y=rnorm(100)
mean(y)
var(y)
sqrt(var(y))
sd(y)
?plot
x=rnorm(100)
y=rnorm(100)
plot(x,y)
plot(x,y,xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
?plot
plot(x,y,type="b",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
?plot
plot(x,y,type="l",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
?plot
plot(x,y,type="c",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
?plot
plot(x,y)
plot(x,y,xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
plot(x,y,type="p",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
plot(x,y,type="l",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
plot(x,y,type="b",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
plot(x,y,type="c",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
plot(x,y,type="b",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
plot(x,y,type="l",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
plot(x,y,type="c",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
plot(x,y,type="h",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
plot(x,y,type="s",xlab="this is the x-axis",ylab="this is the y-axis",
main="Plot of X vs Y")
?plot
plot(x,y,type="p",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # points
plot(x,y,type="l",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # lines
plot(x,y,type="b",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # both
plot(x,y,type="c",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # lines alone of b
plot(x,y,type="o",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # overplotted
plot(x,y,type="l",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # lines
plot(x,y,type="l",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # lines
plot(x,y,type="b",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # both
plot(x,y,type="o",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # overplotted
plot(x,y,type="b",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # both
plot(x,y,type="h",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # histogram
plot(x,y,type="o",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # overplotted
plot(x,y,type="h",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # histogram
plot(x,y,type="s",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # stair steps
plot(x,y,type="S",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # other steps
plot(x,y,type="n",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # no plotting
plot(x,y,type="s",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # stair steps
plot(x,y,type="S",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # other steps
?plot
pdf("Figure.pdf")
plot(x,y,col="green")
dev.off()
x=seq(1,10)
x
x=1:10
x
seq(-pi,pi,length=50)
?contour
y=x
f=outer(x,y,function(x,y)cos(y)/(1+x^2))
contour(x,y,f)
plot(x,y)
contour(x,y,f)
contour(x,y,f,nlevels=45,add=T)
fa=(f-t(f))/2
contour(x,y,fa,nlevels=15)
f
t(f)
image(x,y,fa)
contour(x,y,fa,nlevels=15)
image(x,y,fa)
persp(x,y,fa,theta=30)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=30,phi=70)
persp(x,y,fa,theta=30,phi=40)
persp(x,y,fa)
image(x,y,fa)
persp(x,y,fa)
contour(x,y,fa,nlevels=15)
persp(x,y,fa,theta=30,phi=40)
contour(x,y,fa,nlevels=15)
image(x,y,fa)
persp(x,y,fa)
persp(x,y,fa,theta=30)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=30,phi=70)
persp(x,y,fa,theta=30,phi=40)
persp(x,y,fa,theta=30)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=30,phi=70)
persp(x,y,fa,theta=30,phi=40)
persp(x,y,fa)
persp(x,y,fa,theta=30)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=30,phi=70)
persp(x,y,fa,theta=30,phi=40)
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
persp(x,y,fa,theta=30,phi=x)
x=x+5
x=0
persp(x,y,fa,theta=x,phi=40)
x=x+5
x=seq(-pi,pi,length=50)
?contour
y=x
f=outer(x,y,function(x,y)cos(y)/(1+x^2))
contour(x,y,f)
contour(x,y,f,nlevels=45,add=T)
fa=(f-t(f))/2
contour(x,y,fa,nlevels=15)
image(x,y,fa)
persp(x,y,fa)
persp(x,y,fa,theta=30)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=30,phi=70)
persp(x,y,fa,theta=30,phi=40)
g=0
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa,theta=g,phi=40)
g=g+5
persp(x,y,fa)
persp(x,y,fa,theta=30)
persp(x,y,fa,theta=30,phi=20)
x=rnorm(100)
persp(x,y,fa,theta=30,phi=40)
x=seq(-pi,pi,length=50)
persp(x,y,fa,theta=30,phi=40)
persp(x,y,fa,theta=30)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=30,phi=70)
persp(x,y,fa,theta=30,phi=40)
A=matrix(1:16,4,4)
A
A[2,3]
A[c(1,3),c(2,4)]
A[1:3,2:4]
A[2,3]
A[c(1,3),c(2,4)]
A[1:3,2:4]
A[1:2,]
A[,1:2]
A[1,]
A[-1,]
A[-c(1,3),]
dim()
dim(A)
?dim
A
dim(A[1,])
dim(A[1,3])
dim(A)
Auto=read.table("Auto.data")
fivenumbers(x)
five_numbers(x)
fivenum(x)
attach(Auto)
Auto=read.table("Auto.data",header=T,na.strings="?") # Read in the data
getwd()
Auto=read.table("Auto.data",header=T,na.strings="?") # Read in the data
Auto=read.table("/Auto.data",header=T,na.strings="?") # Read in the data
Auto=read.table("Auto.data",header=T,na.strings="?") # Read in the data
Auto=read.table("Auto.txt",header=T,na.strings="?") # Read in the data
Auto=read.table("Auto.data")
Auto=read.table("Auto.txt")
Auto=read.table("Auto.txt",header=T,na.strings="?") # Read in the data
Auto
dim(Auto) # Get observation count and column count
Auto=na.omit(Auto) # one way to remove missing data
dim(Auto) # Get observation count and column count
names(Auto) # Get column names
attach(Auto)
plot(cylinders, mpg) # optionally can do plot(Auto$cylinders, Auto$mpg) even if not attached
cylinders=as.factor(cylinders) # Cast a column to be a factor
plot(cylinders, mpg) # optionally can do plot(Auto$cylinders, Auto$mpg) even if not attached
plot(cylinders, mpg, col="red")
plot(cylinders, mpg, col="red", varwidth=T)
fivenum(cylinders)
fivenum(cylinders)
summary(Auto)
plot(cylinders, mpg)
plot(cylinders, mpg, col="red")
plot(cylinders, mpg, col="red", varwidth=T)
plot(cylinders, mpg, col="red", varwidth=T, horizontal=T)
plot(cylinders, mpg, col="red", varwidth=T, xlab="cylinders",ylab="MPG")
plot(cylinders, mpg, col="red", varwidth=T)
plot(cylinders, mpg, col="red", varwidth=T, horizontal=T)
plot(cylinders, mpg, col="red", varwidth=T, xlab="cylinders",ylab="MPG")
plot(cylinders, mpg, col="red", varwidth=T)
plot(cylinders, mpg, col="red", varwidth=T, xlab="cylinders",ylab="MPG")
hist(mpg)
hist(mpg,col=2)
hist(mpg,col=2,breaks=15)
hist(mpg)
hist(mpg,col=2)
hist(mpg,col=2,breaks=15)
pairs(Auto)
pairs(~ mpg + displacement + horsepower + weight + acceleration, Auto)
plot(horsepower,mpg)
pairs(~ mpg + displacement + horsepower + weight + acceleration, Auto)
plot(horsepower,mpg)
identify(horsepower, mpg, name) # interactive method for identifying the value for a particular variable for points on a plot
summary(Auto) # Summary of each variable in the particular data set
fivenum(mpg) # five number summary
identify(horsepower, mpg, name) # interactive method for identifying the value for a particular variable for points on a plot
plot(horsepower,mpg)
identify(horsepower, mpg, name) # interactive method for identifying the value for a particular variable for points on a plot
identify(horsepower, mpg, name) # interactive method for identifying the value for a particular variable for points on a plot
identify(horsepower, mpg, name) # interactive method for identifying the value for a particular variable for points on a plot
fivenum(mpg) # five number summary
summary(Auto) # Summary of each variable in the particular data set
sixnum(mpg)
mean(mpg)
